"use strict";(self.webpackChunkunity_dmi_reader=self.webpackChunkunity_dmi_reader||[]).push([[7739],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),d=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=d(e.components);return i.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=d(n),p=r,h=u["".concat(l,".").concat(p)]||u[p]||c[p]||a;return n?i.createElement(h,o(o({ref:t},m),{},{components:n})):i.createElement(h,o({ref:t},m))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var d=2;d<a;d++)o[d]=n[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8582:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var i=n(7462),r=(n(7294),n(3905));const a={},o="CurrentAnimationIndex",s={unversionedId:"tutorial-basics/Getter Methods/current-animation-index",id:"tutorial-basics/Getter Methods/current-animation-index",title:"CurrentAnimationIndex",description:"GetCurrentAnimationIndex",source:"@site/docs/tutorial-basics/Getter Methods/current-animation-index.md",sourceDirName:"tutorial-basics/Getter Methods",slug:"/tutorial-basics/Getter Methods/current-animation-index",permalink:"/UnityDmiReader/docs/tutorial-basics/Getter Methods/current-animation-index",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/Getter Methods/current-animation-index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"AnimationsLoopCount",permalink:"/UnityDmiReader/docs/tutorial-basics/Getter Methods/animation-loop-count"},next:{title:"CurrentAnimationSprite",permalink:"/UnityDmiReader/docs/tutorial-basics/Getter Methods/current-animation-sprite"}},l={},d=[{value:"GetCurrentAnimationIndex",id:"getcurrentanimationindex",level:2},{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Detailed Flow",id:"detailed-flow",level:3},{value:"Example Usage",id:"example-usage",level:3},{value:"Using stateIndex:",id:"using-stateindex",level:4},{value:"Using stateName:",id:"using-statename",level:4}],m={toc:d},u="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"currentanimationindex"},"CurrentAnimationIndex"),(0,r.kt)("h2",{id:"getcurrentanimationindex"},"GetCurrentAnimationIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"public int GetCurrentAnimationIndex(int stateIndex);\npublic int GetCurrentAnimationIndex(string stateName);\n")),(0,r.kt)("h3",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"GetCurrentAnimationIndex")," method retrieves the current animation index for a specific state. This method has two overloads, allowing the user to specify the state either by its index or by its name."),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"stateIndex")," (int): The index of the state for which the current animation index is to be retrieved."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"stateName")," (string): The name of the state for which the current animation index is to be retrieved.")),(0,r.kt)("h3",{id:"detailed-flow"},"Detailed Flow"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"For the overload that takes an integer ",(0,r.kt)("inlineCode",{parentName:"li"},"stateIndex"),", the method validates if the index is within range. If it's not, it returns -1."),(0,r.kt)("li",{parentName:"ol"},"For the overload that takes a string ",(0,r.kt)("inlineCode",{parentName:"li"},"stateName"),", the method finds the index corresponding to the state name. If the state name is not found, it returns -1."),(0,r.kt)("li",{parentName:"ol"},"Retrieves the current animation index for the given state index or state name."),(0,r.kt)("li",{parentName:"ol"},"Returns the current animation index if found, or -1 if the index is invalid or the state name does not exist.")),(0,r.kt)("h3",{id:"example-usage"},"Example Usage"),(0,r.kt)("h4",{id:"using-stateindex"},"Using stateIndex:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class ExampleUnityClass : MonoBehaviour\n{\n    // Define a private DMI object\n    private DMI _dmi;\n\n    /// <summary>\n    /// Start is called before the first frame update.\n    /// </summary>\n    void Start()\n    {\n        this._dmi = gameObject.AddComponent<DMI>();\n        if (this._dmi.Load("dmi_file_path")) {\n            int animationIndex = this._dmi.GetCurrentAnimationIndex(2);\n            Debug.Log("Current animation index for state 2 is: " + animationIndex);\n        }\n    }\n\n    /// <summary>\n    /// Update is called once per frame.\n    /// </summary>\n    void Update() {}\n}\n')),(0,r.kt)("h4",{id:"using-statename"},"Using stateName:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class ExampleUnityClass : MonoBehaviour\n{\n    // Define a private DMI object\n    private DMI _dmi;\n\n    /// <summary>\n    /// Start is called before the first frame update.\n    /// </summary>\n    void Start()\n    {\n        this._dmi = gameObject.AddComponent<DMI>();\n        if (this._dmi.Load("dmi_file_path")) {\n            int animationIndex = this._dmi.GetCurrentAnimationIndex("stateName");\n            Debug.Log("Current animation index for state \'Running\' is: " + animationIndex);\n        }\n    }\n\n    /// <summary>\n    /// Update is called once per frame.\n    /// </summary>\n    void Update() {}\n}\n')),(0,r.kt)("hr",null))}c.isMDXComponent=!0}}]);